version: '3.8'

services:
  # MCP Server - Independent service
  mcp-server:
    build: 
      context: ./server
    ports:
      - "8001:8001"
    environment:
      - MCP_SERVER_HOST=0.0.0.0
      - MCP_SERVER_PORT=8001
    networks:
      - chatbot-network
    healthcheck:
      test: ["CMD", "python", "-c", "import requests; requests.get('http://localhost:8001/health')"]
      interval: 30s
      timeout: 3s
      retries: 3

  # Client/Backend - Requires MCP server
  client:
    build: 
      context: ./client
    ports:
      - "8000:8000"
    environment:
      - MCP_SERVER_HOST=mcp-server
      - MCP_SERVER_PORT=8001
      - APP_HOST=0.0.0.0
      - APP_PORT=8000
    env_file:
      - ./client/.env
    depends_on:
      - mcp-server
    volumes:
      - ./frontend:/app/frontend:ro  # Mount frontend for serving
    networks:
      - chatbot-network
    healthcheck:
      test: ["CMD", "python", "-c", "import requests; requests.get('http://localhost:8000/health')"]
      interval: 30s
      timeout: 3s
      retries: 3

  # Frontend - Optional standalone nginx server
  # (Not needed if client serves frontend)
  frontend:
    build: 
      context: ./frontend
    profiles:
      - standalone-frontend
    ports:
      - "80:80"
    depends_on:
      - client
    networks:
      - chatbot-network

networks:
  chatbot-network:
    driver: bridge